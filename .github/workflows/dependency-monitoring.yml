name: Dependency Monitoring

on:
  schedule:
    - cron: '0 8 * * 1' # Weekly on Monday at 8 AM
  workflow_dispatch: # Allow manual trigger
  push:
    branches: [ main, master, develop ]

jobs:
  dependency-check:
    name: Dependency Health Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: sale-report-app/package-lock.json

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install Node.js dependencies
        working-directory: ./sale-report-app
        run: npm ci

      - name: Generate Rust lockfile
        working-directory: ./sale-report-app/src-tauri
        run: |
          cargo generate-lockfile
          echo "Cargo.lock generated successfully"

      - name: Check for outdated Node.js packages
        working-directory: ./sale-report-app
        run: |
          echo "## 📦 Node.js Dependency Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          npm outdated --json > outdated.json || true
          if [ -s outdated.json ]; then
            echo "### ⚠️ Outdated Packages Found:" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            cat outdated.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "### ✅ All Node.js packages are up to date!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Check for outdated Rust packages
        working-directory: ./sale-report-app/src-tauri
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🦀 Rust Dependency Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Ensure Cargo.lock exists
          if [ ! -f "Cargo.lock" ]; then
            echo "Cargo.lock not found, generating it..." >> $GITHUB_STEP_SUMMARY
            cargo generate-lockfile
          fi
          
          cargo install cargo-outdated
          cargo outdated --format json > rust-outdated.json || true
          if [ -s rust-outdated.json ]; then
            echo "### ⚠️ Outdated Packages Found:" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            cat rust-outdated.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "### ✅ All Rust packages are up to date!" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Security audit - Node.js
        working-directory: ./sale-report-app
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🔒 Security Audit Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          npm audit --audit-level moderate --json > npm-audit.json || true
          vulnerabilities=$(jq -r '.metadata.vulnerabilities.total // 0' npm-audit.json)
          if [ "$vulnerabilities" -gt 0 ]; then
            echo "### ⚠️ $vulnerabilities vulnerabilities found in Node.js packages" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            cat npm-audit.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "### ✅ No vulnerabilities found in Node.js packages" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Security audit - Rust
        working-directory: ./sale-report-app/src-tauri
        run: |
          # Ensure Cargo.lock exists
          if [ ! -f "Cargo.lock" ]; then
            echo "Cargo.lock not found, generating it..." >> $GITHUB_STEP_SUMMARY
            cargo generate-lockfile
          fi
          
          cargo install cargo-audit
          cargo audit --json > rust-audit.json || true
          warnings=$(jq -r '.warnings | length // 0' rust-audit.json)
          if [ "$warnings" -gt 0 ]; then
            echo "### ⚠️ $warnings warnings found in Rust packages" >> $GITHUB_STEP_SUMMARY
            echo '```json' >> $GITHUB_STEP_SUMMARY
            cat rust-audit.json >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "### ✅ No warnings found in Rust packages" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload dependency reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-reports-${{ github.run_number }}
          path: |
            sale-report-app/outdated.json
            sale-report-app/src-tauri/rust-outdated.json
            sale-report-app/npm-audit.json
            sale-report-app/src-tauri/rust-audit.json
          retention-days: 30

      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let summary = '';
            try {
              summary = fs.readFileSync('${{ github.step_summary }}', 'utf8');
            } catch (error) {
              summary = 'Dependency check completed. See workflow logs for details.';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

  notify-on-issues:
    name: Notify on Critical Issues
    runs-on: ubuntu-latest
    needs: dependency-check
    if: failure() || contains(github.event.head_commit.message, 'security') || contains(github.event.head_commit.message, 'vulnerability')
    
    steps:
      - name: Create issue for critical dependency issues
        uses: actions/github-script@v7
        with:
          script: |
            const title = `🚨 Critical Dependency Issues Detected - ${new Date().toISOString().split('T')[0]}`;
            const body = `
            ## 🚨 Critical Dependency Issues Detected
            
            The dependency monitoring workflow has detected critical issues that require immediate attention.
            
            **Workflow Run:** ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            
            Please review the workflow logs and take appropriate action.
            
            ---
            *This issue was automatically created by the dependency monitoring workflow.*
            `;
            
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'dependencies', 'security', 'priority-high']
            });
