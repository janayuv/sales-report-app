name: Workflow Status

on:
  workflow_run:
    workflows: ["CI/CD Pipeline", "Code Quality", "Performance Testing"]
    types: [completed]

jobs:
  status-check:
    name: Check Workflow Status
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion != 'skipped'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get workflow status
        id: status
        run: |
          echo "workflow_name=${{ github.event.workflow_run.name }}" >> $GITHUB_OUTPUT
          echo "conclusion=${{ github.event.workflow_run.conclusion }}" >> $GITHUB_OUTPUT
          echo "html_url=${{ github.event.workflow_run.html_url }}" >> $GITHUB_OUTPUT

      - name: Create status summary
        run: |
          echo "## 🔄 Workflow Status Update" >> status.md
          echo "" >> status.md
          echo "**Workflow:** ${{ steps.status.outputs.workflow_name }}" >> status.md
          echo "**Status:** ${{ steps.status.outputs.conclusion }}" >> status.md
          echo "**URL:** ${{ steps.status.outputs.html_url }}" >> status.md
          echo "" >> status.md
          
          if [ "${{ steps.status.outputs.conclusion }}" = "success" ]; then
            echo "✅ All checks passed!" >> status.md
          elif [ "${{ steps.status.outputs.conclusion }}" = "failure" ]; then
            echo "❌ Some checks failed. Please review the logs." >> status.md
          elif [ "${{ steps.status.outputs.conclusion }}" = "cancelled" ]; then
            echo "⏹️ Workflow was cancelled." >> status.md
          else
            echo "⚠️ Workflow completed with status: ${{ steps.status.outputs.conclusion }}" >> status.md
          fi

      - name: Comment on PR
        if: github.event.workflow_run.pull_requests[0]
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('status.md', 'utf8');
            const prNumber = context.payload.workflow_run.pull_requests[0].number;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
