name: Notifications

on:
  workflow_run:
    workflows: ["CI/CD Pipeline", "Code Quality", "Performance Testing", "Security Scan", "Accessibility Testing"]
    types: [completed]
  pull_request:
    types: [opened, closed, merged]
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]

jobs:
  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    
    steps:
      - name: Notify on success
        run: |
          echo "‚úÖ Workflow completed successfully!"
          echo "Workflow: ${{ github.event.workflow_run.name || 'Push to main' }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          
          # Add notification logic here (Slack, Discord, email, etc.)
          # Example:
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"‚úÖ Build successful on '${{ github.ref_name }}'"}' \
          #   ${{ secrets.SLACK_WEBHOOK_URL }}

  notify-failure:
    name: Notify Failure
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'failure'
    
    steps:
      - name: Notify on failure
        run: |
          echo "‚ùå Workflow failed!"
          echo "Workflow: ${{ github.event.workflow_run.name }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "URL: ${{ github.event.workflow_run.html_url }}"
          
          # Add notification logic here
          # Example:
          # curl -X POST -H 'Content-type: application/json' \
          #   --data '{"text":"‚ùå Build failed on '${{ github.ref_name }}': '${{ github.event.workflow_run.html_url }}'"}' \
          #   ${{ secrets.SLACK_WEBHOOK_URL }}

  notify-pr-merged:
    name: Notify PR Merged
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    
    steps:
      - name: Notify PR merged
        run: |
          echo "üéâ Pull Request merged!"
          echo "PR: ${{ github.event.pull_request.title }}"
          echo "Author: ${{ github.event.pull_request.user.login }}"
          echo "Merged by: ${{ github.event.pull_request.merged_by.login }}"
          
          # Add notification logic here

  notify-release:
    name: Notify Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Notify new release
        run: |
          echo "üöÄ New release created!"
          echo "Version: ${{ github.ref_name }}"
          echo "Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
          
          # Add notification logic here
